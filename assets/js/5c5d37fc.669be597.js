"use strict";(self.webpackChunkixla_docs=self.webpackChunkixla_docs||[]).push([[506],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294);function r(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7462),r=n(7294),i=n(2389),l=n(1419),o=n(6010),s="tabItem_LplD";function p(e){var t,n,i,p=e.lazy,c=e.block,m=e.defaultValue,d=e.values,u=e.groupId,f=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=d?d:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=g[0])?void 0:i.props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,l.UB)(),k=v.tabGroupChoices,w=v.setTabGroupChoices,S=(0,r.useState)(y),T=S[0],x=S[1],N=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=u){var A=k[u];null!=A&&A!==T&&h.some((function(e){return e.value===A}))&&x(A)}var I=function(e){var t=e.currentTarget,n=N.indexOf(t),a=h[n].value;a!==T&&(E(t),x(a),null!=u&&w(u,a))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=N.indexOf(e.currentTarget)+1;n=N[a]||N[0];break;case"ArrowLeft":var r=N.indexOf(e.currentTarget)-1;n=N[r]||N[N.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":c},f)},h.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return N.push(e)},onKeyDown:j,onFocus:I,onClick:I},i,{className:(0,o.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),p?(0,r.cloneElement)(g.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function c(e){var t=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},6254:function(e,t,n){n.r(t),n.d(t,{assets:function(){return W},contentTitle:function(){return J},default:function(){return B},frontMatter:function(){return _},metadata:function(){return R},toc:function(){return M}});var a,r,i,l,o,s,p,c,m,d,u,f,g,h,b,y,v=n(7462),k=n(3366),w=n(7294),S=n(3905),T=n.p+"assets/images/home-2f6c1ea1a7cceefaa7ef150e918c9727.png",x=n.p+"assets/images/template_creation_01-45c8060862004747a885f177f30a2465.png",N=n.p+"assets/images/template_creation_02-ae25d31cb2aaa96ce38c364344ef1e8d.png",E=n.p+"assets/images/template_creation_03-55892d711d24e83a6a4f156f542c2351.png",A=n.p+"assets/images/import_rear_entities-cf20c229523cba5d943e8418959bc888.png",I=n.p+"assets/images/template_creation_04-6b5ed80fd30a8ac6f898694e25299db1.png",j=n.p+"assets/images/template_creation_05-00a9d6861d7e474f13c1708476467fc6.png",D=n.p+"assets/images/template_creation_06-23e807ac620de75a6afa1f2599767a57.png",O=["title","titleId"];function P(){return P=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},P.apply(this,arguments)}function L(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var C=function(e){var t=e.title,n=e.titleId,v=L(e,O);return w.createElement("svg",P({xmlns:"http://www.w3.org/2000/svg",width:372,height:262,viewBox:"-0.5 -0.5 372 262","aria-labelledby":n},v),t?w.createElement("title",{id:n},t):null,a||(a=w.createElement("rect",{width:370,height:260,rx:2.6,ry:2.6,fill:"#e6ffcc",stroke:"#000",pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe flex-start",justifyContent:"unsafe flex-start",width:356,height:1,paddingTop:5,marginLeft:8}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"left"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},w.createElement("font",{style:{fontSize:14}},"Job template"))))),r||(r=w.createElement("text",{x:8,y:19,fontFamily:"system-ui",fontSize:14,fontWeight:"bold"},"\r\n                    Job template\r\n                "))),i||(i=w.createElement("rect",{x:8,y:30,width:354,height:99,rx:2.97,ry:2.97,fill:"#b3ff66",stroke:"#000",pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe flex-start",justifyContent:"unsafe flex-end",width:340,height:1,paddingTop:35,marginLeft:14}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"right"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},"Layouts")))),l||(l=w.createElement("text",{x:354,y:49,fontFamily:"system-ui",fontSize:14,textAnchor:"end",fontWeight:"bold"},"\r\n                    Layouts\r\n                "))),o||(o=w.createElement("path",{d:"M84.29 48.29V122H15V36h59.39Z",fill:"#ffc",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),s||(s=w.createElement("path",{d:"M74.39 36c.81 2.87-.52 5.84-3.53 7.9l14.14 5Z",fill:"#ffc",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe center",justifyContent:"unsafe center",width:56,height:1,paddingTop:79,marginLeft:22}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"center"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},"Front.sjf")))),p||(p=w.createElement("text",{x:50,y:83,fontFamily:"system-ui",fontSize:14,textAnchor:"middle",fontWeight:"bold"},"\r\n                    Front.sjf\r\n                "))),c||(c=w.createElement("path",{d:"M159.29 48.29V122H90V36h59.39Z",fill:"#ffc",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),m||(m=w.createElement("path",{d:"M149.39 36c.81 2.87-.52 5.84-3.53 7.9l14.14 5Z",fill:"#ffc",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe center",justifyContent:"unsafe center",width:56,height:1,paddingTop:79,marginLeft:97}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"center"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},"Rear.sjf")))),d||(d=w.createElement("text",{x:125,y:83,fontFamily:"system-ui",fontSize:14,textAnchor:"middle",fontWeight:"bold"},"\r\n                    Rear.sjf\r\n                "))),u||(u=w.createElement("path",{d:"M186.2 177.98c-3.03 0-4.16-2.43-4.16-3.96 0-2.73 2.18-4.08 4.15-4.08 1.62 0 3.86 1.4 3.86 4.08 0 1.75-1.47 3.96-3.85 3.96Zm0 6.78c5.71 0 10.51-4.83 10.51-10.74 0-6.84-5.64-10.85-10.51-10.85-6.1 0-10.93 4.76-10.93 10.85 0 6.03 4.75 10.74 10.93 10.74Zm-22.1-.38-2.1-7.82 6.37-2.56c-.02-1.24.18-2.88.53-4.28l-5.56-4 3.91-6.92 6.15 2.64c1.06-1.06 2.21-2.01 3.52-2.79l-.97-6.62 7.8-2.03 2.4 6.24c1.48 0 2.94.12 4.35.53l3.9-5.36 6.9 3.93-2.63 6.01c1.06 1.15 2.01 2.35 2.78 3.62l6.45-.97 2.1 7.74-6.08 2.41c-.01 1.52-.19 3-.6 4.45l5.18 3.83-3.9 6.92-6-2.63c-1.04 1.15-2.21 1.92-3.38 2.63l1.05 6.54-7.8 2.11-2.47-6.16c-1.5.02-3.05-.16-4.43-.53l-3.9 5.42-6.9-3.92 2.63-6.18c-.97-1-1.86-2.09-2.62-3.37Z",fill:"#e6e6e6",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe flex-start",justifyContent:"unsafe center",width:34,height:1,paddingTop:211,marginLeft:169}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"center"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},"OCR Settings")))),f||(f=w.createElement("text",{x:186,y:225,fontFamily:"system-ui",fontSize:14,textAnchor:"middle",fontWeight:"bold"},"\r\n                    OCR S...\r\n                "))),g||(g=w.createElement("path",{d:"M105.2 177.98c-3.03 0-4.16-2.43-4.16-3.96 0-2.73 2.18-4.08 4.15-4.08 1.62 0 3.86 1.4 3.86 4.08 0 1.75-1.47 3.96-3.85 3.96Zm0 6.78c5.71 0 10.51-4.83 10.51-10.74 0-6.84-5.64-10.85-10.51-10.85-6.1 0-10.93 4.76-10.93 10.85 0 6.03 4.75 10.74 10.93 10.74Zm-22.1-.38-2.1-7.82 6.37-2.56c-.02-1.24.18-2.88.53-4.28l-5.56-4 3.91-6.92 6.15 2.64c1.06-1.06 2.21-2.01 3.52-2.79l-.97-6.62 7.8-2.03 2.4 6.24c1.48 0 2.94.12 4.35.53l3.9-5.36 6.9 3.93-2.63 6.01c1.06 1.15 2.01 2.35 2.78 3.62l6.45-.97 2.1 7.74-6.08 2.41c-.01 1.52-.19 3-.6 4.45l5.18 3.83-3.9 6.92-6-2.63c-1.04 1.15-2.21 1.92-3.38 2.63l1.05 6.54-7.8 2.11-2.47-6.16c-1.5.02-3.05-.16-4.43-.53l-3.9 5.42-6.9-3.92 2.63-6.18c-.97-1-1.86-2.09-2.62-3.37Z",fill:"#e6e6e6",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe flex-start",justifyContent:"unsafe center",width:34,height:1,paddingTop:211,marginLeft:88}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"center"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},"AutoPos Settings")))),h||(h=w.createElement("text",{x:105,y:225,fontFamily:"system-ui",fontSize:14,textAnchor:"middle",fontWeight:"bold"},"\r\n                    AutoP...\r\n                "))),b||(b=w.createElement("path",{d:"M265.2 177.98c-3.03 0-4.16-2.43-4.16-3.96 0-2.73 2.18-4.08 4.15-4.08 1.62 0 3.86 1.4 3.86 4.08 0 1.75-1.47 3.96-3.85 3.96Zm0 6.78c5.71 0 10.51-4.83 10.51-10.74 0-6.84-5.64-10.85-10.51-10.85-6.1 0-10.93 4.76-10.93 10.85 0 6.03 4.75 10.74 10.93 10.74Zm-22.1-.38-2.1-7.82 6.37-2.56c-.02-1.24.18-2.88.53-4.28l-5.56-4 3.91-6.92 6.15 2.64c1.06-1.06 2.21-2.01 3.52-2.79l-.97-6.62 7.8-2.03 2.4 6.24c1.48 0 2.94.12 4.35.53l3.9-5.36 6.9 3.93-2.63 6.01c1.06 1.15 2.01 2.35 2.78 3.62l6.45-.97 2.1 7.74-6.08 2.41c-.01 1.52-.19 3-.6 4.45l5.18 3.83-3.9 6.92-6-2.63c-1.04 1.15-2.21 1.92-3.38 2.63l1.05 6.54-7.8 2.11-2.47-6.16c-1.5.02-3.05-.16-4.43-.53l-3.9 5.42-6.9-3.92 2.63-6.18c-.97-1-1.86-2.09-2.62-3.37Z",fill:"#e6e6e6",stroke:"#000",strokeMiterlimit:10,pointerEvents:"none"})),w.createElement("switch",{transform:"translate(-.5 -.5)"},w.createElement("foreignObject",{pointerEvents:"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility",style:{overflow:"visible",textAlign:"left"}},w.createElement("div",{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"flex",alignItems:"unsafe flex-start",justifyContent:"unsafe center",width:34,height:1,paddingTop:211,marginLeft:248}},w.createElement("div",{"data-drawio-colors":"color: #000000;",style:{boxSizing:"border-box",fontSize:0,textAlign:"center"}},w.createElement("div",{style:{display:"inline-block",fontSize:14,fontFamily:"system-ui",color:"#000",lineHeight:1.2,pointerEvents:"none",fontWeight:700,whiteSpace:"normal",overflowWrap:"normal"}},"DataSource Settings")))),y||(y=w.createElement("text",{x:265,y:225,fontFamily:"system-ui",fontSize:14,textAnchor:"middle",fontWeight:"bold"},"\r\n                    DataS...\r\n                "))))},F=n(9877),z=n(8215),Z=["components"],_={title:"Configure Job Templates"},J=void 0,R={unversionedId:"setup-and-integration/configure-job-templates",id:"setup-and-integration/configure-job-templates",title:"Configure Job Templates",description:"Job Templates",source:"@site/docs/setup-and-integration/01-configure-job-templates.mdx",sourceDirName:"setup-and-integration",slug:"/setup-and-integration/configure-job-templates",permalink:"/ixla-docs/docs/setup-and-integration/configure-job-templates",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Configure Job Templates"},sidebar:"defaultSidebar",previous:{title:"Design and create documents",permalink:"/ixla-docs/docs/setup-and-integration/prerequisites"},next:{title:"Database Integration",permalink:"/ixla-docs/docs/setup-and-integration/database-integration"}},W={},M=[{value:"Job Templates",id:"job-templates",level:2},{value:"Job Template Setup Wizard",id:"job-template-setup-wizard",level:2},{value:"Opening the Template Wizard",id:"opening-the-template-wizard",level:3},{value:"1. Create a new Job Template",id:"1-create-a-new-job-template",level:3},{value:"2. Upload SJF Files",id:"2-upload-sjf-files",level:3},{value:"3. Create Layouts",id:"3-create-layouts",level:3},{value:"4. Attach a Data Source",id:"4-attach-a-data-source",level:3},{value:"We&#39;re done!",id:"were-done",level:3}],q={toc:M};function B(e){var t=e.components,n=(0,k.Z)(e,Z);return(0,S.kt)("wrapper",(0,v.Z)({},q,n,{components:t,mdxType:"MDXLayout"}),(0,S.kt)("h2",{id:"job-templates"},"Job Templates"),(0,S.kt)("p",null,"Job templates are configuration containers that provide the system with the information required to start issuing cards, such as: "),(0,S.kt)("ul",null,(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"Layouts")," - Association between ",(0,S.kt)("em",{parentName:"li"},"SJF Files")," and the ",(0,S.kt)("em",{parentName:"li"},"Card Side")," on which they should be printed"),(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"XY Auto-Positioning Settings")," - gives AIDA references to correctly position ",(0,S.kt)("em",{parentName:"li"},"Entities")," before engraving"),(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"OCR Settings")," - Used for data integrity checks"),(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"Data Source Settings")," - Data Source Settings define where and how the system will retrive personalization data for engraving. Although the system is designed to support different kinds of data sources, the current version supports only relational databases. ")),(0,S.kt)("div",{className:"svg-content-container"},(0,S.kt)(C,{mdxType:"JobTemplate"})),(0,S.kt)("p",null,"Job Templates can be easily created and configued from the WebApp using its setup wizard."),(0,S.kt)("h2",{id:"job-template-setup-wizard"},"Job Template Setup Wizard"),(0,S.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,S.kt)("div",{parentName:"div",className:"admonition-heading"},(0,S.kt)("h5",{parentName:"div"},(0,S.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,S.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,S.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,S.kt)("div",{parentName:"div",className:"admonition-content"},(0,S.kt)("p",{parentName:"div"},"Click the ",(0,S.kt)("strong",{parentName:"p"},"API")," tab to see how equivalent actions can be performed using REST API calls."),(0,S.kt)("p",{parentName:"div"},"Use the table of contents on the right to navigate between steps"))),(0,S.kt)("h3",{id:"opening-the-template-wizard"},"Opening the Template Wizard"),(0,S.kt)("p",null,"Click ",(0,S.kt)("span",{className:"icon-btn"},"+")," button to open the job tempalte setup wizard"),(0,S.kt)(F.Z,{groupId:"switch",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"webapp",label:"Web App",mdxType:"TabItem"},(0,S.kt)("img",{className:"wizard-step",src:T}))),(0,S.kt)("hr",null),(0,S.kt)("h3",{id:"1-create-a-new-job-template"},"1. Create a new Job Template"),(0,S.kt)(F.Z,{groupId:"switch",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"webapp",label:"Web App",mdxType:"TabItem"},(0,S.kt)("p",null,(0,S.kt)("p",null,"Provide a name and a description for your template and click the ",(0,S.kt)("span",{className:"btn"},"CREATE TEMPLATE")," button")),(0,S.kt)("img",{className:"wizard-step",src:x})),(0,S.kt)(z.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,S.kt)("p",null,"All the operations related to SJF files and, more generally, to SCAPS SAMLight can be\nperformed through the ",(0,S.kt)("em",{parentName:"p"},"Scanner API"),". "),(0,S.kt)("p",null,"When we create a new tempate, the system perform the following operations: "),(0,S.kt)("ul",null,(0,S.kt)("li",{parentName:"ul"},"Create a new job template in samlight"),(0,S.kt)("li",{parentName:"ul"},"Generate a unique identifier "),(0,S.kt)("li",{parentName:"ul"},"Use the unique identifier as a filename for the new file"),(0,S.kt)("li",{parentName:"ul"},"Save the new job in its file store ")),(0,S.kt)(F.Z,{groupId:"code",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"ts",label:"Angular",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ScannerService } from '@ixla/aida-sdk-angular'\n\n// ScannerService injected from DI\nexport class MyAppService {\n  constructor(private readonly scanner: ScannerService) {\n  }\n\n  async createJobTemplate(name: string, description: string) {\n      return await this.scanner.createJobTemplate({\n          createJobTemplateDto: { name, description }\n      });\n  }\n}\n\n"))),(0,S.kt)(z.Z,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-csharp"},"using IXLA.AIDA.Sdk;\n\npublic class MyAppService {\n\n  private readonly ScannerApi _scanner;\n  \n  // ScannerService injected from DI\n  public MyAppService(ScannerService scanner) {\n    _scanner = scanner;\n  }\n\n  public async Task<JobTemplateDto> CreateJobTemplate(string name, string description) {\n      var parameters = new CreateJobTempltateDto {\n        Name = name,\n        Description = description\n      }\n      return await _scanner.CreateJobTemplate(parameters);\n  }\n}\n\n"))),(0,S.kt)(z.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-http"},'POST /AIDA/v1/scanner/job-templates\nHost: $BOX_IP_ADDRESS:5000\nAccept: application/json \n\n{\n  "name" : "My Template Name",\n  "description" : "My Template Description" \n}\n\n')))),(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response payload"',title:'"Response','payload"':!0},'{\n// highlight-start\n  "id": 1,\n  "name": "string",\n  "description": "string",\n// highlight-end\n  "created": "2019-12-10T10:06:50.466318Z",\n  "updated": "2019-12-10T10:06:50.466318Z",\n  "expectedMarkDuration": "25:01:01.001",\n  ...\n}\n')),(0,S.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,S.kt)("div",{parentName:"div",className:"admonition-heading"},(0,S.kt)("h5",{parentName:"div"},(0,S.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,S.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,S.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,S.kt)("div",{parentName:"div",className:"admonition-content"},(0,S.kt)("p",{parentName:"div"},"Store the job template id somewhere, we will need it later as a parameter for other API calls "))))),(0,S.kt)("hr",null),(0,S.kt)("h3",{id:"2-upload-sjf-files"},"2. Upload SJF Files"),(0,S.kt)(F.Z,{groupId:"switch",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"webapp",label:"Web App",mdxType:"TabItem"},(0,S.kt)("p",{className:"margin-top-2"},(0,S.kt)("p",null,"Now we will need to import ",(0,S.kt)("em",{parentName:"p"},"SJF Files")," into the system. Click ",(0,S.kt)("span",{className:"btn btn-white"},"ADD NEW")," to open the file dialog")),(0,S.kt)("img",{className:"wizard-step",src:N}),(0,S.kt)("p",{className:"margin-top-2"},(0,S.kt)("p",null,"Select the files you want to import and click ",(0,S.kt)("span",{className:"btn-system"},(0,S.kt)("u",null,"O"),"pen"))),(0,S.kt)("img",{className:"wizard-step",src:E}),(0,S.kt)("p",{className:"margin-top-2"},(0,S.kt)("p",null,"Click ",(0,S.kt)("span",{className:"btn"},"UPLOAD")," to start transferring the files you selected.\nAIDA stores the uploaded files and indexes entity metadata in its database.")),(0,S.kt)("img",{className:"wizard-step",src:I})),(0,S.kt)(z.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,S.kt)("p",null,"SJF Files can be imported using the ",(0,S.kt)("em",{parentName:"p"},"Scanner API")),(0,S.kt)(F.Z,{groupId:"code",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"ts",label:"Angular",mdxType:"TabItem"},(0,S.kt)("p",null,"The ",(0,S.kt)("em",{parentName:"p"},"UploadLayoutFile")," endpoint accepts an ",(0,S.kt)("em",{parentName:"p"},"UploadLayoutRequestFileParams")," object.\nTo upload the files using the ",(0,S.kt)("em",{parentName:"p"},"typescript-angular")," SDK you will need a browser that supports the ",(0,S.kt)("em",{parentName:"p"},"File API")),(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="UploadLayoutFileRequestParams.ts"',title:'"UploadLayoutFileRequestParams.ts"'},"export interface UploadLayoutFileRequestParams {\n    // The scannerId parameter is present in all ScannerService's endpoints, it \n    // is used to route requests towards the right module in machines that \n    // have more than 1 laser (eg. IXLA BOX). If it is not provided the system \n    // will use the first available module\n    scannerId?: string;   \n    layoutName?: string;  // Layouts are identified by name\n    supportSide?: string; // support side can be ignored during import\n    files?: Array<Blob>;  // files to be uploaded\n}\n")),(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ScannerService } from '@ixla/aida-sdk-angular';\n...\nconstructor(private readonly scanner: ScannerService) {}\n...\n\n// retrieve the list of files to import from UI/External system APIs \nconst filesToImport: Array<UploadLayoutFileRequestParams> = [ ... ]; \n\n// remember, to extract entities metadata the system uses SCAPS SAMLight \n// we cannot parallellize this operations on the same node. \n// We could do it, using different scanners for each layout, but would complicate \n// the code a lot for a very little gain in performance, since this is an operation \n// that is done once, during system configuration\nforeach(var requestParams in filesToImport) {\n  await this.scanner.uploadLayoutFile(requestParams).toPromise();\n}\n\n"))),(0,S.kt)(z.Z,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-csharp"},'using IXLA.AIDA.Sdk;\n... \nprivate readonly _scanner: ScannerService; \n...\n\n// file stream for an sfj file named front.sjf\nusing var frontStream = System.IO.File.OpenRead(@"front.sjf")\n// file stream for an sfj file named rear.sjf\nusing var rearStream = System.IO.File.OpenRead(@"rear.sjf")\n\n\n// import front.sjf \nawait _scanner.uploadLayoutFile(\n  layoutName: "Front",\n  supportSide: "front" // optional, can be ignored during upload\n  files: new List<System.IO.File> { frontStream }\n);\n\n// import rear.sjf \nawait _scanner.uploadLayoutFile(\n  layoutName: "Rear",\n  supportSide: "rear" // optional, can be ignored during upload\n  files: new List<System.IO.File> { rearStream }\n);\n...\n'))),(0,S.kt)(z.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-http"},'POST /AIDA/v1/scanner/layouts\nHost: $BOX_IP_ADDRESS:5000\nContent-Type: multipart/form-data;boundary="boundary"\n\n--boundary\nContent-Disposition: form-data; name="files"; filename="Front_DemoBox.sjf"\nContent-Type: binary/octet-stream\n... sjf contents ...\n\n')))),(0,S.kt)("p",null,"for every uploaded file the system will perform the following actions automatically: "),(0,S.kt)("ul",null,(0,S.kt)("li",{parentName:"ul"},"Open SCAPS SAMLight "),(0,S.kt)("li",{parentName:"ul"},"Create a new empty Job"),(0,S.kt)("li",{parentName:"ul"},"Load the uploaded file with the ",(0,S.kt)("inlineCode",{parentName:"li"},"Overwrite Entities")," flag enabled"),(0,S.kt)("li",{parentName:"ul"},"Rename entities adding a prefix to avoid duplicates "),(0,S.kt)("li",{parentName:"ul"},"Index entities and extract metadata"),(0,S.kt)("li",{parentName:"ul"},"Generate a unique identifier for the new job"),(0,S.kt)("li",{parentName:"ul"},"Save the job using the generated id as filename")),(0,S.kt)("p",null,"At the end of the process it will return a ",(0,S.kt)("em",{parentName:"p"},"LayoutDto")," object, which contains the extracted metadata"),(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response Body"',title:'"Response','Body"':!0},'// LayoutDto\n{\n  "id": 0,\n  "name": "string",\n  "supportSide": "string",\n  "created": "2019-12-10T10:06:50.466318Z",\n  "updated": "2019-12-10T10:06:50.466318Z",\n  // ApplicationFileDto\n  "file": { \n    "filename": "string",\n    "originalFilename": "string",\n    "displayName": "string",\n    "size": 0,\n    "location": "string",\n    "checksum": "string",\n    "extension": "string",\n    "created": "2019-12-10T10:06:50.466318Z",\n    "updated": "2019-12-10T10:06:50.466318Z"\n  },\n  // EntityDto\n  "entities": [\n    {\n      "id": 0,\n      "penId": 0,\n      "markLoopCount": 0,\n      "name": "string",\n      "displayName": "string",\n      "prefix": "string",\n      "type": "Bitmap",\n      "userData": 0,\n      "layoutId": 0,\n      "layoutName": "string",\n      "rotationAngle": 0,\n      "expectedMarkDuration": "25:01:01.001",\n      // DRectangleDto\n      "outline": {\n        "x": 0,\n        "y": 0,\n        "width": 0,\n        "height": 0,\n        "dataType": "double"\n      }\n    }\n    ...\n  ],\n  ...\n}\n')))),(0,S.kt)("hr",null),(0,S.kt)("h3",{id:"3-create-layouts"},"3. Create Layouts"),(0,S.kt)("p",null,"Layouts are ",(0,S.kt)("em",{parentName:"p"},"SJF Files")," assigned to a ",(0,S.kt)("em",{parentName:"p"},"Job Template")," and a ",(0,S.kt)("em",{parentName:"p"},"card side"),". AIDA uses this information during issuance to correctly position the card before marking."),(0,S.kt)(F.Z,{groupId:"switch",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"webapp",label:"Web App",mdxType:"TabItem"},(0,S.kt)("p",{className:"margin-top-2"},(0,S.kt)("p",null,"The GUI shows a list of previously imported ",(0,S.kt)("em",{parentName:"p"},"SJF Files"),". Select files that you want to print on the front side of the card and click ",(0,S.kt)("span",{className:"btn"},"NEXT"))),(0,S.kt)("img",{className:"wizard-step",src:j}),(0,S.kt)("p",{className:"margin-top-2"},(0,S.kt)("p",null,"Do the same for the rear side.")),(0,S.kt)("img",{className:"wizard-step",src:A})),(0,S.kt)(z.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,S.kt)("p",null,"In terms of API calls, ",(0,S.kt)("em",{parentName:"p"},"Creating a Layout")," means: "),(0,S.kt)("ul",null,(0,S.kt)("li",{parentName:"ul"},"Loading a Job Template"),(0,S.kt)("li",{parentName:"ul"},"Importing entities from another SJF file, specifying where those entities should be printed (front, rear)"),(0,S.kt)("li",{parentName:"ul"},"Saving the Job file")),(0,S.kt)("p",null,"An example of what the webapp does (in pseudo code) looks like this: "),(0,S.kt)(F.Z,{groupId:"code",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"ts",label:"Angular",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-typescript"},"\n  // load the job template in SCAPS SAMLight\n  await this.scannerApi.loadJobTemplate({\n    id: jobTemplateId, // jobTemplateId saved previously when we created the job template\n    force:true\n  }).toPromise();\n\n  // selectedLayouts is the list of selected elements by the user in the UI \n  // it is a collection of { layoutId: number, cardSide: string } objects\n  for(const selection of selectedLayouts) {\n    // loadLayout will import the entities from the layout's SJF file\n    // into the currently loaded job template and assigne the specified card side.\n    await this.scannerApi.loadLayout({\n      id: selection.layoutId,\n      cardSide: selection.cardSide \n    }).toPromise();  \n  }\n\n  // saveJobTemplate saves the template's SJF file, and updates the database\n  await this.scannerApi.saveJobTemplate({}).toPromise();\n\n"))),(0,S.kt)(z.Z,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-csharp"},"// data type used to represent SJF files assigned to a card side\npublic record LayoutSelection(int LayoutId, string CardSide);\n\npublic async Task AssignLayouts(int jobTemplateId, IEnumerable<LayoutSelection> selectedLayouts) \n{\n   await _scannerApi.LoadJobTemplate(jobTemplateId);\n\n   foreach(var selection in selectedLayouts) \n      await _scannerApi.LoadLayout(selection.LayoutId, selectedLayouts.cardSide);\n\n   await _scannerApi.SaveJobTemplate();\n}\n"))),(0,S.kt)(z.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-http",metastring:'title="Load Job Template"',title:'"Load',Job:!0,'Template"':!0},"POST /AIDA/v1/scanner/load-job-template?id=1\nHost: $BOX_IP_ADDRESS:5000\nAccept: application/json\n")),(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-http",metastring:'title="Load Layouts"',title:'"Load','Layouts"':!0},"POST /AIDA/v1/scanner/load-layout?layoutName=DemoBox_Front&supportSide=front\nHost: $BOX_IP_ADDRESS:5000\nAccept: application/json\n\n... \n\nPOST /AIDA/v1/scanner/load-layout?layoutName=DemoBox_Rear&supportSide=rear\nHost: $BOX_IP_ADDRESS:5000\nAccept: application/json\n\n")),(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-http",metastring:'title="Save the job template"',title:'"Save',the:!0,job:!0,'template"':!0},"POST /AIDA/v1/scanner/save\nHost: $BOX_IP_ADDRESS:5000\nAccept: application/json\n\n")))))),(0,S.kt)("h3",{id:"4-attach-a-data-source"},"4. Attach a Data Source"),(0,S.kt)("p",null,"The last thing to do is to generate the database tables that we will use to provide personalization data and schedule jobs."),(0,S.kt)(F.Z,{groupId:"switch",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"webapp",label:"Web App",mdxType:"TabItem"},(0,S.kt)("p",null,"Go ahead and click ",(0,S.kt)("span",{className:"btn"},"CREATE DATASOURCE")," to complete the configuration. Flagging the ",(0,S.kt)("em",{parentName:"p"},"Generate mock dataset")," checkbox will populate\nthe generated tables with mock data. This might be useful for testing purposes."),(0,S.kt)("img",{className:"wizard-step",src:D})),(0,S.kt)(z.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,S.kt)("p",null,"We can generate ",(0,S.kt)("em",{parentName:"p"},"Data Exchange Tables")," using the ",(0,S.kt)("em",{parentName:"p"},"ETL Service API"),". "),(0,S.kt)("p",null,"The the ",(0,S.kt)("em",{parentName:"p"},"GenerateDataSource")," will generate a ",(0,S.kt)("em",{parentName:"p"},"Data Exchange Table")," and configure a ",(0,S.kt)("em",{parentName:"p"},"Data Source")," object for the specified job template.\n",(0,S.kt)("em",{parentName:"p"},"Data Source")," objects are used during issuance to retrive information such as: "),(0,S.kt)("ul",null,(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"Connection string")," "),(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"Table Name")),(0,S.kt)("li",{parentName:"ul"},(0,S.kt)("strong",{parentName:"li"},"Query Template"))),(0,S.kt)("p",null,"The generated data source will look like this: "),(0,S.kt)("ul",null,(0,S.kt)("li",{parentName:"ul"},"Table Name: The name of the ",(0,S.kt)("em",{parentName:"li"},"Data Exchange Table")," generated by the system"),(0,S.kt)("li",{parentName:"ul"},"Connection String: Connection string for connecting to AIDA's RDBMS"),(0,S.kt)("li",{parentName:"ul"},"Query Template: SQL that selects all non blob fields (images are fetched as needed during issuance)")),(0,S.kt)(F.Z,{groupId:"code",mdxType:"Tabs"},(0,S.kt)(z.Z,{value:"ts",label:"Angular",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-typescript"},"import {EtlService} from '@ixla/aida-sdk-angular'\n...\n// EtlService injected from DI\nconstructor(private readonly etlService: EtlService) {\n}\n...\nawait this.etlService.generateDataSource({\n  // job templateId previously stored or retrieved from APIs\n  jobTemplateId: jobTemplateId\n}).toPromise()\n...\n"))),(0,S.kt)(z.Z,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-csharp"},"  using IXLA.AIDA.Sdk;\n  ...\n  private readonly EtlService _etl;\n  ...\n  await _etl.GenerateDataSource(jobTemplateId);\n"))),(0,S.kt)(z.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,S.kt)("pre",null,(0,S.kt)("code",{parentName:"pre",className:"language-http"},"POST /AIDA/v1/etl/JOB_TEMPLATE_ID/generate-datasource\nHost: $BOX_IP_ADDRESS:5000\nAccept: application/json\n")))))),(0,S.kt)("h3",{id:"were-done"},"We're done!"),(0,S.kt)("p",null,"We have created and configured our first job template.\nKeep reading to see how we can populate ",(0,S.kt)("em",{parentName:"p"},"Data Exchange Tables")," with personalization data and finally start issuing cards."))}B.isMDXComponent=!0}}]);
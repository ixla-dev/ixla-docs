{
  "openapi": "3.0.1",
  "info": {
    "title": "iws",
    "description": "6.1.4.0",
    "version": "v1"
  },
  "paths": {
    "/iws/v1/application/settings": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Returns the configuration object currently used by the system",
        "operationId": "GetApplicationSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/autopos/{autoPosSettingsId}/execute": {
      "post": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Run XY Auto-Positioning and return the estimated offset",
        "operationId": "GetOffset",
        "parameters": [
          {
            "name": "autoPosSettingsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/autopos/{id}/debug.jpg": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Draws search area and best match rectangles on a camera frame and returns it as a jpeg image",
        "operationId": "AutoPosDebug",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/autopos/{id}/debug/live": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Motion JPEG stream of the camera with XY Auto-Pos overlay",
        "operationId": "AutoPosDebugLive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/autopos/autopos/job/{jobTemplateId}/layout/{layoutId}/scanner/{scannerId}/debug/live": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Motion JPEG stream of the camera with XY Auto-Pos overlay",
        "operationId": "AutoPosConfigDebugLive",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/autopos": {
      "post": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Creates a new XY Auto-Position configuration",
        "operationId": "AddAutoPosSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoPosSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoPosSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoPosSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoPosSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/barcode-read/jobs/{jobTemplateId}/_execute": {
      "post": {
        "tags": [
          "BarcodeRead"
        ],
        "operationId": "ReadBarcode",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "barcodeReadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResult"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/barcode-read/jobs/{jobTemplateId}": {
      "post": {
        "tags": [
          "BarcodeRead"
        ],
        "operationId": "AddBarcodeReadSettings",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "SearchArea.X": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.Y": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.Width": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.Height": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.DataType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "SearchArea.X": {
                  "style": "form"
                },
                "SearchArea.Y": {
                  "style": "form"
                },
                "SearchArea.Width": {
                  "style": "form"
                },
                "SearchArea.Height": {
                  "style": "form"
                },
                "SearchArea.DataType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateBarcodeReadSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateBarcodeReadSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateBarcodeReadSettings"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/database/purge-data": {
      "post": {
        "tags": [
          "Database"
        ],
        "operationId": "PurgeApplicationData",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/datasource-configuration": {
      "get": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "GetConfigurations",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceConfiguration"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceConfiguration"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "DeleteDataSourceConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "AddDataSourceConfiguration",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/etl/{jobId}/entities": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "GetEntityData",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityDescriptor"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityDescriptor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/etl/{jobId}/exchange-table-ddl": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "GetExchangeTableDdl",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/etl/{jobId}/create-data-exchange-table": {
      "post": {
        "tags": [
          "Etl"
        ],
        "operationId": "CreateDataExchangeTable",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/etl/{jobId}/generate-datasource": {
      "post": {
        "tags": [
          "Etl"
        ],
        "operationId": "GenerateDataSource",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/etl/{jobId}/generate-mock-dataset": {
      "post": {
        "tags": [
          "Etl"
        ],
        "operationId": "GenerateMockDataset",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DataRecord"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/files/settings": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "GetSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileServiceSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServiceSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServiceSettings"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/files/{bucket}/upload": {
      "post": {
        "tags": [
          "Files"
        ],
        "operationId": "Upload",
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFile"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/files/{bucket}": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "List",
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationFile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationFile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationFile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/files/delete-file": {
      "delete": {
        "tags": [
          "Files"
        ],
        "operationId": "DeleteFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/health-check": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "Check",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/lamp/state": {
      "post": {
        "tags": [
          "Lamp"
        ],
        "operationId": "SetLampState",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LampState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Lamp"
        ],
        "operationId": "GetLampState",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LampState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/laser-board/test": {
      "get": {
        "tags": [
          "LaserBoard"
        ],
        "operationId": "TestCalls",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/machine/scanners": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "ListScanners",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerModuleDescriptor"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerModuleDescriptor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerModuleDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/machine/modules": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "ListModules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleDefinition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/machine/modules/{moduleId}/devices": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "ListDevices",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DeviceType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDefinition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/machine/info": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "GetSystemInformation",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/machine-events/laser-board/state-changed": {
      "post": {
        "tags": [
          "MachineEvents"
        ],
        "operationId": "LaserBoardStateChanged",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/modbus/clients": {
      "get": {
        "tags": [
          "Modbus"
        ],
        "operationId": "GetModbusClients",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/modbus/{port}/write-single-register": {
      "post": {
        "tags": [
          "Modbus"
        ],
        "operationId": "WriteSingleRegister",
        "parameters": [
          {
            "name": "port",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/modbus/{port}/read-holding-registers": {
      "post": {
        "tags": [
          "Modbus"
        ],
        "operationId": "ReadHoldingRegisters",
        "parameters": [
          {
            "name": "port",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/ocr/jobs/{jobTemplateId}/_execute": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "Performs OCR as configured in JobTemplate",
        "operationId": "PerformOcr",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "description": "The JobTemplate id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          },
          {
            "name": "ocrId",
            "in": "query",
            "description": "The OCR operation id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Successful OCR operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              }
            }
          },
          "500": {
            "description": "Error during OCR operation"
          }
        }
      }
    },
    "/iws/v1/ocr/jobs/{jobTemplateId}": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "Adds an OCR operation configuration linked to a JobTemplate",
        "operationId": "AddOcrSettings",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "description": "The JobTemplate id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Whitelist": {
                    "type": "string"
                  },
                  "SearchArea.X": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.Y": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.Width": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.Height": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SearchArea.DataType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Whitelist": {
                  "style": "form"
                },
                "SearchArea.X": {
                  "style": "form"
                },
                "SearchArea.Y": {
                  "style": "form"
                },
                "SearchArea.Width": {
                  "style": "form"
                },
                "SearchArea.Height": {
                  "style": "form"
                },
                "SearchArea.DataType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OCR configuration added",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              }
            }
          },
          "500": {
            "description": "Error during OCR configuration"
          }
        }
      }
    },
    "/iws/v1/scanner": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetState",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/debug/enable": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableDebugMode",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/debug/disable": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableDebugMode",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/configuration/export": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ExportScannerConfig",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/configuration/download": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DownloadScannerConfig",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/load-job": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadJobTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/load-job-instance": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "summary": "Loads a job template, fetches the personalization data from the configured data source\r\nand updates entities",
        "operationId": "LoadJobInstance",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/load-layout": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadLayout",
        "parameters": [
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overwriteEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loadMaterials",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/mark-layout": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MarkLayout",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/select-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SelectEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/mark-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MarkEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/stop-marking": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "StopMarking",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/red-pointer/start": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "StartRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/red-pointer/stop": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "StopRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/transform/translate": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "TranslateEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/transform/rotate": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RotateEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/transform/move-to": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MoveTo",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/save": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SaveJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/save-job-file": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SaveJobTemplateFile",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/update-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "encoding": {
                "assets": {
                  "contentType": "application/octet-stream",
                  "style": "form"
                },
                "data": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/{jobId}/load-job-data/{supportId}": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadJobData",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/settings-file": {
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UploadSettingsFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "settingsFile": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "settingsFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DownloadSettingsFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/is-connected": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "IsConnected",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/camera/info": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCameraInfo",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/connect": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "Connect",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/camera/ocr": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RunOcrEngine",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/camera/barcode": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RunBarcodeReader",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/camera/live": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LiveStream",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enableBinning",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/camera/settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateCameraSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCameraSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/camera/settings/reset": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ResetCameraOutputSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/camera/get-snapshot": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetSnapshot",
        "parameters": [
          {
            "name": "randomName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "height",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "jpg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/move-abs": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MoveAbs",
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "y",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/preview.jpg": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetPreview",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/pens": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCurrentPenSet",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaserPen"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaserPen"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaserPen"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/pens/{id}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/laser-board/state": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLaserBoardState",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/illumination/disable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableIllumination",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/illumination/enable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableIllumination",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/laser/enable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableLaserPen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/laser/disable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableLaserPen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/red-pointer/enable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/red-pointer/disable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/filename": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCurrentJobFilename",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/measure-mark-time": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MeasureEntitiesMarkTime",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/simulate-mark/{cardId}": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SimulateMark",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/test-selection/{cardId}": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "TestSelection",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/compute-mark-groups": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ComputeMarkGroups",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDescriptor"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDescriptor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SearchJobTemplates",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeLayouts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeFile",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplatesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplatesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplatesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/auto-pos/init": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "InitializeAutoPos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{jobTemplateId}/layouts/{layoutId}/autopos/settings": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetAutoPosSettings",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/validate-name": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ValidateJobTemplateName",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindJobTemplateById",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/layouts": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetJobTemplateLayouts",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/job-template/{id}/layouts/upload": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UploadLayoutAndAddToJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-template/{id}/jobs": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetJobs",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JobStatus"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-template/{id}/mark-groups": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AddMarkGroup",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/job-templates/{id}/mark-groups": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RemoveMarkGroups",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateMarkGroups",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/compute-mark-groups-with-strategy": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ComputeMarkGroupsWithStrategy",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerMarkGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerMarkGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerMarkGroupDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/layouts": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SearchLayouts",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeFile",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/layouts/{id}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindLayoutById",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteLayout",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/scanner/layouts/{id}/entities": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLayoutEntities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerEntity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerEntity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/layouts/settings": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLayoutsSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSettings"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/layouts/validate-name": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ValidateLayoutName",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/layouts/import": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ImportLayoutFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/scanner/layouts/upload": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UploadLayoutFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/system/system-status": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "GetSystemStatus",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/state": {
      "get": {
        "tags": [
          "Transport"
        ],
        "summary": "Returns a list of objects with the state of each module",
        "operationId": "GetTransportState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxModuleState"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxModuleState"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxModuleState"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/iws/v1/transport/disconnect": {
      "post": {
        "tags": [
          "Transport"
        ],
        "summary": "Disconnects the transport module",
        "operationId": "Disconnect",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/iws/v1/transport/connect": {
      "post": {
        "tags": [
          "Transport"
        ],
        "summary": "Connects the transport module",
        "operationId": "ConnectTransport",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/iws/v1/transport/modules": {
      "get": {
        "tags": [
          "Transport"
        ],
        "summary": "Returns an object with the state of the whole transport",
        "operationId": "GetModules",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/iws/v1/transport/feed": {
      "post": {
        "tags": [
          "Transport"
        ],
        "summary": "Moves a card from the Feeder to the desired destination",
        "operationId": "Feed",
        "parameters": [
          {
            "name": "Source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card moved correctly"
          },
          "500": {
            "description": "Error moving card"
          }
        }
      }
    },
    "/iws/v1/transport/shift": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "Shift",
        "parameters": [
          {
            "name": "supportId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/{moduleId}/flip": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "FlipCard",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/can-perform-movement": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "CanPerformMovement",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/reset": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "Reset",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/{moduleId}/reset": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "ResetModule",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/positions": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetTransportPositions",
        "parameters": [
          {
            "name": "includeAliases",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/transport/machine-inputs": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetMachineInputs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/transport/move": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "Move",
        "parameters": [
          {
            "name": "Source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/paths": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetAllPaths",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/machine-exits": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetMachineExists",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/{position}": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetTransportPosition",
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/path/shortest": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetShortestPath",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/sources/available": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetAvailableSources",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/transport/targets/available": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetAvailableTargets",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/iws/v1/workflows/card-personalization/start": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "operationId": "Workflows_RunWorkflow",
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflows/definitions": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "operationId": "GetWorkflowDefinitions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/VersionOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetWorkflowSchedulerState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/start": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "StartWorkflowScheduler",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/transport-benchmark": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "StartTransportBenchmark",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/stop": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "StopWorkflowScheduler",
        "parameters": [
          {
            "name": "stopAllRunningWorkflows",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerState"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/metrics": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetMetrics",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeMetrics"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeMetrics"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/workflow-registry": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "ListWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/workflow-instances": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetWorkflowInstances",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkflowStatus"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceDtoPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceDtoPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceDtoPagedList"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "DeleteWorkflowInstances",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/workflow-instances/suspended": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetSuspendedWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/workflow-instances/suspended/cancel": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "CancelSuspendedWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iws/v1/workflow-scheduler/workflows/{workflowInstanceId}/signals/encoding-completed": {
      "put": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "TriggerEncodingCompletedSignal",
        "parameters": [
          {
            "name": "workflowInstanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectedWorkflow"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectedWorkflow"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectedWorkflow"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppConfig": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "clusterName": {
            "type": "string",
            "nullable": true
          },
          "masterBaseAddress": {
            "type": "string",
            "nullable": true
          },
          "logSerialData": {
            "type": "boolean"
          },
          "laserBoardEnabled": {
            "type": "boolean"
          },
          "boxTransportEnabled": {
            "type": "boolean"
          },
          "mockTransportEnabled": {
            "type": "boolean"
          },
          "encoderEnabled": {
            "type": "boolean"
          },
          "workflowsEnabled": {
            "type": "boolean"
          },
          "elsaWorkflowsEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "scannerHeadEnabled": {
            "type": "boolean"
          },
          "localScannerEnabled": {
            "type": "boolean"
          },
          "cameraEnabled": {
            "type": "boolean"
          },
          "laserBoard": {
            "$ref": "#/components/schemas/LaserBoardConfig"
          },
          "cameraType": {
            "$ref": "#/components/schemas/CameraType"
          },
          "blobTempPath": {
            "type": "string",
            "nullable": true
          },
          "enableReverseProxy": {
            "type": "boolean"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleDefinition"
            },
            "nullable": true
          },
          "transport": {
            "$ref": "#/components/schemas/TransportConfig"
          },
          "opticSettings": {
            "$ref": "#/components/schemas/OpticSettings"
          },
          "lamp": {
            "$ref": "#/components/schemas/LampConfig"
          },
          "supportedWorkflows": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filename": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "originalFilename": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "checksum": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileBucketId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "$ref": "#/components/schemas/ApplicationFile"
          },
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "horizontalResolution": {
            "type": "number",
            "format": "float"
          },
          "verticalResolution": {
            "type": "number",
            "format": "float"
          },
          "imageFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationImageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "horizontalResolution": {
            "type": "number",
            "format": "float"
          },
          "verticalResolution": {
            "type": "number",
            "format": "float"
          },
          "imageFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BarcodeParamsDto": {
        "type": "object",
        "properties": {
          "rotation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "roi": {
            "$ref": "#/components/schemas/RectangleDto"
          }
        },
        "additionalProperties": false
      },
      "BarcodeReadResult": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "barcodeFormat": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BarcodeReadResultDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "barcodeFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoxModuleState": {
        "type": "object",
        "properties": {
          "statusChangeId": {
            "type": "integer",
            "format": "int32"
          },
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "hardwareRevision": {
            "type": "string",
            "nullable": true
          },
          "firmwareRevision": {
            "type": "string",
            "nullable": true
          },
          "dipSwitchHardwareSetting": {
            "type": "integer",
            "format": "int32"
          },
          "doors": {
            "$ref": "#/components/schemas/DoorStatus"
          },
          "positions": {
            "$ref": "#/components/schemas/ModulePositionsFlags"
          },
          "transportStatus": {
            "$ref": "#/components/schemas/BoxModuleTransportStatus"
          },
          "closedPhotoSensors": {
            "$ref": "#/components/schemas/PhotoSensorsFlags"
          },
          "statusFlags": {
            "$ref": "#/components/schemas/TransportStatusFlags"
          }
        },
        "additionalProperties": false
      },
      "BoxModuleStateChangedEventNotification": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "eventData": {
            "$ref": "#/components/schemas/BoxModuleState"
          }
        },
        "additionalProperties": false
      },
      "BoxModuleTransportStatus": {
        "enum": [
          "Unknown",
          "Ready",
          "AnotherCmdExError",
          "FeederEmpty",
          "MagFeederOut",
          "MagStackerOut",
          "CardJam",
          "FlipError",
          "FeederError",
          "NoCardFed",
          "CardSourceEmpty",
          "CardDestFull",
          "ChipReaderError",
          "TrayEjectOpen",
          "StackerError",
          "Busy"
        ],
        "type": "string"
      },
      "CameraSettingsDto": {
        "type": "object",
        "properties": {
          "size": {
            "$ref": "#/components/schemas/SizeDto"
          },
          "gainDb": {
            "type": "number",
            "format": "double"
          },
          "exposureMicroseconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CameraType": {
        "enum": [
          "MockCamera",
          "MvBlueFox"
        ],
        "type": "string"
      },
      "CollectedWorkflow": {
        "type": "object",
        "properties": {
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "activityId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAutoPosSettingsDto": {
        "type": "object",
        "properties": {
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "searchArea": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "templateArea": {
            "$ref": "#/components/schemas/RectangleDto"
          }
        },
        "additionalProperties": false
      },
      "CreateDataSourceDto": {
        "type": "object",
        "properties": {
          "dataSourceType": {
            "$ref": "#/components/schemas/DataSourceType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "queryTemplate": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateJobTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataRecordField"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRecordField": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSourceConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataSourceType": {
            "$ref": "#/components/schemas/DataSourceType"
          }
        },
        "additionalProperties": false
      },
      "DataSourceConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataSourceType": {
            "$ref": "#/components/schemas/DataSourceType"
          }
        },
        "additionalProperties": false
      },
      "DataSourceType": {
        "enum": [
          "RelationalDatabase"
        ],
        "type": "string"
      },
      "DeviceDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          }
        },
        "additionalProperties": false
      },
      "DeviceToggleState": {
        "enum": [
          "Unknown",
          "Enabled",
          "Disabled"
        ],
        "type": "string"
      },
      "DeviceType": {
        "enum": [
          "Camera",
          "Encoder",
          "LightSource",
          "Transport",
          "LaserBoard",
          "Laser"
        ],
        "type": "string"
      },
      "DoorStatus": {
        "enum": [
          "Closed",
          "FrontOpen",
          "RearOpen"
        ],
        "type": "string"
      },
      "DRectangleDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "dataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityDescriptor": {
        "type": "object",
        "properties": {
          "entityIndex": {
            "type": "integer",
            "format": "int32"
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/EntityFieldValueType"
          }
        },
        "additionalProperties": false
      },
      "EntityFieldValueType": {
        "enum": [
          "None",
          "String",
          "Image"
        ],
        "type": "string"
      },
      "EntityType": {
        "enum": [
          "Bitmap",
          "Text",
          "Barcode",
          "LineArray",
          "LineArrays",
          "PolyLine",
          "PolyLines",
          "Rectangle",
          "Layer",
          "SerialNumber"
        ],
        "type": "string"
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "nullable": true
          },
          "originalFilename": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "checksum": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          }
        },
        "additionalProperties": false
      },
      "FileServiceSettings": {
        "type": "object",
        "properties": {
          "root": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterlockStatusEnum": {
        "enum": [
          "ALL_CLOSED",
          "EXT_INTRLK_OPEN",
          "INTRLK_1_OPEN",
          "INTRLK_2_OPEN",
          "INTRLK_3_OPEN",
          "INTRLK_4_5_OPEN",
          "UNDEFINED"
        ],
        "type": "string"
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updateTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completeTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "workflowStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobStatus": {
        "enum": [
          "Waiting",
          "Running",
          "Completed",
          "Faulted"
        ],
        "type": "string"
      },
      "JobTemplateBarcodeReadSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "searchArea": {
            "$ref": "#/components/schemas/ScannerDRectangle"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "barcodeFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "expectedMarkDuration": {
            "type": "string",
            "example": "25:01:01.001"
          },
          "workingArea": {
            "$ref": "#/components/schemas/DRectangleDto"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "dataSourceConfiguration": {
            "$ref": "#/components/schemas/DataSourceConfigurationDto"
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LayoutDto"
            },
            "nullable": true
          },
          "markGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerMarkGroupDto"
            },
            "nullable": true
          },
          "autoPosEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "JobTemplateLayoutAutoPosSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "createTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updateTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "threshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "layoutId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "layoutName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          },
          "jobTemplateLayoutId": {
            "type": "integer",
            "format": "int32"
          },
          "searchArea": {
            "$ref": "#/components/schemas/Rectangle"
          },
          "templateArea": {
            "$ref": "#/components/schemas/Rectangle"
          },
          "searchPatternImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchPatternImage": {
            "$ref": "#/components/schemas/ApplicationImage"
          },
          "referenceImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referenceImage": {
            "$ref": "#/components/schemas/ApplicationImage"
          },
          "offsetX": {
            "type": "number",
            "format": "double"
          },
          "offsetY": {
            "type": "number",
            "format": "double"
          },
          "rotation": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "JobTemplateOcrSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "searchArea": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "side": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "whitelist": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "meanConfidence": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "LampConfig": {
        "type": "object",
        "properties": {
          "serialPortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LampState": {
        "enum": [
          "Idle",
          "Error",
          "Armed",
          "Working"
        ],
        "type": "string"
      },
      "LaserBoardConfig": {
        "type": "object",
        "properties": {
          "serialPortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LaserBoardState": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "firmwareVersion": {
            "type": "string",
            "nullable": true
          },
          "hardwareType": {
            "type": "string",
            "nullable": true
          },
          "systemType": {
            "type": "string",
            "nullable": true
          },
          "interlockStatus": {
            "$ref": "#/components/schemas/InterlockStatusEnum"
          },
          "laserPen": {
            "$ref": "#/components/schemas/DeviceToggleState"
          },
          "redPointer": {
            "$ref": "#/components/schemas/DeviceToggleState"
          },
          "illumination": {
            "$ref": "#/components/schemas/DeviceToggleState"
          }
        },
        "additionalProperties": false
      },
      "LaserBoardStateChangedEventArgs": {
        "type": "object",
        "properties": {
          "currentState": {
            "$ref": "#/components/schemas/LaserBoardState"
          },
          "previousState": {
            "$ref": "#/components/schemas/LaserBoardState"
          }
        },
        "additionalProperties": false
      },
      "LaserBoardStateChangedEventNotification": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "eventData": {
            "$ref": "#/components/schemas/LaserBoardStateChangedEventArgs"
          }
        },
        "additionalProperties": false
      },
      "LaserPen": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "laserPower": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pulseLenght": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "firstPulseLength": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "halfPeriod": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "jumpDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "polyDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "laserOnDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "laserOffDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "jumpSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pixelMap": {
            "$ref": "#/components/schemas/PixelMap"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Layout": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "file": {
            "$ref": "#/components/schemas/ApplicationFile"
          },
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerEntity"
            },
            "nullable": true
          },
          "expectedMarkDurationMs": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LayoutDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerEntityDto"
            },
            "nullable": true
          },
          "autoPosSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerAutoPosSettingsDto"
            },
            "nullable": true
          },
          "autoPosEnabled": {
            "type": "boolean"
          },
          "autoPosConfigured": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LayoutEngine": {
        "type": "object",
        "additionalProperties": false
      },
      "LayoutSettings": {
        "type": "object",
        "properties": {
          "layoutEngine": {
            "$ref": "#/components/schemas/LayoutEngine"
          }
        },
        "additionalProperties": false
      },
      "MachineStateNotifierEvents": {
        "enum": [
          "ModuleStateChanged",
          "LaserBoardStateChanged",
          "SerialDataSent",
          "SerialDataReceived",
          "SystemStatusChanged",
          "WorkflowSchedulerStateChanged",
          "WorkflowInstanceStateChanged"
        ],
        "type": "string"
      },
      "MarkEntitiesDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "offsetX": {
            "type": "number",
            "format": "double"
          },
          "offsetY": {
            "type": "number",
            "format": "double"
          },
          "rotationAngle": {
            "type": "number",
            "format": "double"
          },
          "autoPosSettings": {
            "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettings"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarkGroupScannerEntity"
            },
            "nullable": true
          },
          "expectedMarkDurationMs": {
            "type": "number",
            "format": "double"
          },
          "measuredMarkDurationMs": {
            "type": "number",
            "format": "double"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MarkGroupScannerEntity": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "entityId": {
            "type": "integer",
            "format": "int32"
          },
          "markGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkGroupScannerEntityDto": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "entityId": {
            "type": "integer",
            "format": "int32"
          },
          "markGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/ScannerEntityDto"
          }
        },
        "additionalProperties": false
      },
      "ModuleDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "baseAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDefinition"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModulePositionsFlags": {
        "enum": [
          "NoCard",
          "Flipover",
          "Laser",
          "FlipoverFlipped",
          "StackerNotPresent",
          "NoCardInFeeder",
          "FeederMagNotPresent"
        ],
        "type": "string"
      },
      "MoveToDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NameValidationErrorReason": {
        "enum": [
          "None",
          "EmptyName",
          "NameAlreadyTaken",
          "NameContainsInvalidCharacters"
        ],
        "type": "string"
      },
      "NameValidationResultDto": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "nullable": true
          },
          "valid": {
            "type": "boolean"
          },
          "suggested": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValidationErrorReason"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OcrParamsDto": {
        "type": "object",
        "properties": {
          "rotation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "roi": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "threshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OcrResultDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "meanConfidence": {
            "type": "number",
            "format": "float",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OpticSettings": {
        "type": "object",
        "properties": {
          "pixelsPerMillimeter": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PhotoSensorsFlags": {
        "enum": [
          "FeederHome",
          "FeederCardPresent",
          "Input",
          "FlipHome",
          "Reject",
          "LaserInput",
          "LaserOutput",
          "StackerHome",
          "FeederCardBatch",
          "EncoderInOut1",
          "EncoderInOut2",
          "EncoderInOut3",
          "EncoderInOut4",
          "FeederTubePresent",
          "StackerTubePresent"
        ],
        "type": "string"
      },
      "PixelMap": {
        "type": "object",
        "properties": {
          "zone01": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone02": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone03": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone04": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone05": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone06": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone07": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone08": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone09": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone10": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Rectangle": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RectangleDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "dataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RotateEntitiesDto": {
        "type": "object",
        "properties": {
          "deg": {
            "type": "number",
            "format": "double"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeMetrics": {
        "type": "object",
        "properties": {
          "runningJobs": {
            "type": "integer",
            "format": "int32"
          },
          "waitingJobs": {
            "type": "integer",
            "format": "int32"
          },
          "completedJobs": {
            "type": "integer",
            "format": "int32"
          },
          "faultedJobs": {
            "type": "integer",
            "format": "int32"
          },
          "averageJobDuration": {
            "type": "integer",
            "format": "int32"
          },
          "jobsPerHour": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "uptimeSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScannerAppStateDto": {
        "type": "object",
        "properties": {
          "entityCount": {
            "type": "integer",
            "format": "int32"
          },
          "isMarking": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "currentJob": {
            "$ref": "#/components/schemas/JobTemplateDto"
          }
        },
        "additionalProperties": false
      },
      "ScannerAutoPosSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "searchPatternImageId": {
            "type": "integer",
            "format": "int32"
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "searchPatternImage": {
            "$ref": "#/components/schemas/ApplicationImageDto"
          },
          "searchArea": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "templateArea": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "isConfigured": {
            "type": "boolean"
          },
          "debugUrl": {
            "type": "string",
            "nullable": true
          },
          "scannerModule": {
            "$ref": "#/components/schemas/ScannerModuleDescriptor"
          }
        },
        "additionalProperties": false
      },
      "ScannerDRectangle": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ScannerEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "rotationAngle": {
            "type": "number",
            "format": "double"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "laserPenId": {
            "type": "integer",
            "format": "int32"
          },
          "userData": {
            "type": "integer",
            "format": "int32"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "outline": {
            "$ref": "#/components/schemas/ScannerDRectangle"
          },
          "expectedMarkDurationMs": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markLoopCount": {
            "type": "integer",
            "format": "int32"
          },
          "outputAsBitmap": {
            "type": "boolean"
          },
          "markFlags": {
            "$ref": "#/components/schemas/ScannerEntityMarkFlags"
          }
        },
        "additionalProperties": false
      },
      "ScannerEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "penId": {
            "type": "integer",
            "format": "int32"
          },
          "markLoopCount": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "userData": {
            "type": "integer",
            "format": "int32"
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "rotationAngle": {
            "type": "number",
            "format": "double"
          },
          "expectedMarkDuration": {
            "type": "string",
            "example": "25:01:01.001"
          },
          "outline": {
            "$ref": "#/components/schemas/DRectangleDto"
          }
        },
        "additionalProperties": false
      },
      "ScannerEntityMarkFlags": {
        "type": "object",
        "properties": {
          "markContour": {
            "type": "boolean"
          },
          "markHatch": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ScannerMarkGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "scannerId": {
            "type": "string",
            "description": "The scanner module that will mark entities",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "description": "The target position the support should be in\r\nwhen marking entities",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarkGroupScannerEntityDto"
            },
            "nullable": true
          },
          "expectedMarkDuration": {
            "type": "string",
            "example": "25:01:01.001"
          }
        },
        "additionalProperties": false
      },
      "ScannerModuleDescriptor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "baseAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDefinition"
            },
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchJobTemplatesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchLayoutsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Layout"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SelectEntitiesDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SizeDto": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StartRedPointerDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "side": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "entranceTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          }
        },
        "additionalProperties": false
      },
      "SupportSide": {
        "enum": [
          "Unknown",
          "Front",
          "Rear"
        ],
        "type": "string"
      },
      "TaskAllocationBucket": {
        "type": "object",
        "properties": {
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDescriptor"
            },
            "nullable": true,
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TaskDescriptor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "expectedDuration": {
            "type": "number",
            "format": "double"
          },
          "bucket": {
            "$ref": "#/components/schemas/TaskAllocationBucket"
          }
        },
        "additionalProperties": false
      },
      "TranslateEntitiesDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Translation": {
        "type": "object",
        "properties": {
          "selection": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "$ref": "#/components/schemas/Vector3d"
          }
        },
        "additionalProperties": false
      },
      "TransportConfig": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "serialPorts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransportPositionDto": {
        "type": "object",
        "properties": {
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "isMachineExit": {
            "type": "boolean"
          },
          "isMachineInput": {
            "type": "boolean"
          },
          "isAlias": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "occupied": {
            "type": "boolean"
          },
          "realPosition": {
            "type": "string",
            "nullable": true
          },
          "currentSupport": {
            "$ref": "#/components/schemas/SupportDto"
          }
        },
        "additionalProperties": false
      },
      "TransportStatusFlags": {
        "enum": [
          "Motor1On",
          "Motor2On",
          "Motor3On",
          "Motor4On",
          "CardFlipped",
          "CardOnOcrPosition",
          "TransportError",
          "FeederEmpty",
          "FeederError",
          "CardNotFed",
          "FlipError",
          "NotUsed",
          "StackerError"
        ],
        "type": "string"
      },
      "UpdateCameraSettingsDto": {
        "type": "object",
        "properties": {
          "size": {
            "$ref": "#/components/schemas/SizeDto"
          },
          "gainDb": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "exposureMicroseconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enableBinning": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Vector3d": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "VersionOptions": {
        "type": "object",
        "properties": {
          "isLatest": {
            "type": "boolean",
            "readOnly": true
          },
          "isLatestOrPublished": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublished": {
            "type": "boolean",
            "readOnly": true
          },
          "isDraft": {
            "type": "boolean",
            "readOnly": true
          },
          "allVersions": {
            "type": "boolean",
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowBlueprintSummaryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "isSingleton": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "isLatest": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkflowBlueprintSummaryModelPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStatus": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "faultedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "currentActivityId": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityId": {
            "type": "string",
            "nullable": true
          },
          "currentActivityName": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityName": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceDtoPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowInstanceDto"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceStateChangedEventArgs": {
        "type": "object",
        "properties": {
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "executingActivityId": {
            "type": "string",
            "nullable": true
          },
          "executingActivityName": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityId": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityName": {
            "type": "string",
            "nullable": true
          },
          "supportId": {
            "type": "string",
            "nullable": true
          },
          "currentPositionId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceSummaryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStatus": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "faultedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          }
        },
        "additionalProperties": false
      },
      "WorkflowSchedulerStartupParamsDto": {
        "type": "object",
        "properties": {
          "workflowTypeName": {
            "type": "string",
            "nullable": true
          },
          "stopAfter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "dryRun": {
            "type": "boolean",
            "nullable": true
          },
          "taskAllocationStrategy": {
            "type": "string",
            "nullable": true
          },
          "noReset": {
            "type": "boolean",
            "nullable": true
          },
          "disableRedPointer": {
            "type": "boolean",
            "nullable": true
          },
          "skipEntityUpdates": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowSchedulerState": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowSchedulerStatus"
          },
          "queueSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "errorDetails": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "upTimeSeconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowSchedulerStateDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowSchedulerStatus"
          },
          "queueSize": {
            "type": "integer",
            "format": "int32"
          },
          "errorDetails": {
            "type": "string",
            "nullable": true
          },
          "lastLoadedItemId": {
            "type": "integer",
            "format": "int32"
          },
          "upTimeSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "currentJobTemplate": {
            "$ref": "#/components/schemas/JobTemplateDto"
          }
        },
        "additionalProperties": false
      },
      "WorkflowSchedulerStatus": {
        "enum": [
          "Starting",
          "Running",
          "Waiting",
          "Error",
          "Stopped",
          "FeederEmpty",
          "JobQueueEmpty"
        ],
        "type": "string"
      },
      "WorkflowStatus": {
        "enum": [
          "Idle",
          "Running",
          "Finished",
          "Suspended",
          "Faulted",
          "Cancelled"
        ],
        "type": "string"
      }
    }
  }
}